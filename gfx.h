/* File generated with Shader Minifier 1.1.5
 * http://www.ctrl-alt-test.fr
 */
#ifndef GFX_H_
# define GFX_H_

const char *gfx_frag =
 "#version 130\n"
 "uniform float iTime;"
 "uniform vec2 iResolution;"
 "uniform float iScale,iNBeats;"
 "const float pi=acos(-1.);"
 "const vec2 c=vec2(1.,0.);"
 "float rand(vec2 f)"
 "{"
   "return fract(sin(dot(f.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float smoothstep_noise(float f)"
 "{"
   "float v=-1.+2.*rand(floor(f)*c.xx),y=-1.+2.*rand(ceil(f)*c.xx);"
   "return mix(v,y,smoothstep(.25,.75,fract(f)));"
 "}"
 "float mfsmoothstep_noise(float f,float v,float y,float r)"
 "{"
   "float i=0.,x=1.;"
   "for(float m=v;m<y;m=m*2.)"
     "i=x*smoothstep_noise(m*f)+i,x=x*r;"
   "return i;"
 "}"
 "vec2 rot(vec2 r,float f)"
 "{"
   "return mat2(cos(f),sin(f),-sin(f),cos(f))*r;"
 "}"
 "mat3 rot(vec3 f)"
 "{"
   "vec3 i=cos(f),s=sin(f);"
   "mat3 r=mat3(i.y*i.x,i.x*s.z+i.z*s.x*s.y,s.x*s.z-i.x*i.z*s.y,-i.y*s.z,i.x*i.z-s.x*s.y*s.z,i.z*s.x+i.x*s.y*s.z,s.y,-i.y*s.x,i.x*i.y);"
   "return r;"
 "}"
 "float rect(vec2 f,vec2 y)"
 "{"
   "return length(max(abs(f)-y,0.));"
 "}"
 "vec3 synthcol(float f,float s)"
 "{"
   "vec3 i=vec3(207.,30.,102.)/255.,x=vec3(245.,194.,87.)/255.;"
   "mat3 v=rot(.5*s*vec3(1.1,1.3,1.5));"
   "return 1.1*mix(-cross(i,v*i),-(v*i),f);"
 "}"
 "void mainImage(out vec4 f,in vec2 v)"
 "{"
   "vec2 i=v/iResolution.yy-.5-.33*c.xy;"
   "i=rot(i,.25*iTime);"
   "vec4 s=vec4(0.,c.yyy);"
   "float r=128.,x=.2;"
   "for(int m=0;m<12;++m)"
     "{"
       "i=rot(i,1.1);"
       "vec2 y=vec2(length(i),atan(i.y/i.x)-float(m)*.1*iTime),e=vec2(y.x-.05*float(m),mod(y.y,2.*pi/r)-pi/r),a=vec2(x,e.y);"
       "float z=(y-e).y;"
       "x=.2+float(m)*.005+.006;"
       "float l=.1*mfsmoothstep_noise(z-iTime-4.*float(m),1.,100.,.45)+.05*rand(z*c.xx+.2*c.yx)+.05*iScale,g=abs(.005*float(m)+l),w=abs(.015+.005*rand(z*c.xx+.4));"
       "vec4 d=vec4(rect(e-x*c.xy,g*c.xy+w*c.yx),synthcol((e.x-x)/.05+e.y/2./pi,iNBeats));"
       "s=mix(s,d,step(d.x,s.x));"
     "}"
   "vec3 y=s.yzw*step(s.x,0.);"
   "f=vec4(y,1.);"
 "}"
 "void main()"
 "{"
   "mainImage(gl_FragColor,gl_FragCoord.xy);"
 "}";

#endif // GFX_H_
